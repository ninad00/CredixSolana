import{c as S,P as u,B as f,L as l,J as w,S as v}from"./index-Cn4J80Qa.js";import{g as m,I as P}from"./source-CoX-Z0Aa.js";/**
 * @license lucide-react v0.516.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const I=[["path",{d:"M21.801 10A10 10 0 1 1 17 3.335",key:"yps3ct"}],["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}]],K=S("circle-check-big",I),b=new u("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");new u("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb");const B=new u("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL");new u("So11111111111111111111111111111111111111112");new u("9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP");const A=r=>{const e=r.decode.bind(r),a=r.encode.bind(r);return{decode:e,encode:a}};var d={},k;function E(){if(k)return d;k=1,Object.defineProperty(d,"__esModule",{value:!0});function r(c){{const t=f.from(c);t.reverse();const n=t.toString("hex");return n.length===0?BigInt(0):BigInt(`0x${n}`)}}d.toBigIntLE=r;function e(c){{const t=c.toString("hex");return t.length===0?BigInt(0):BigInt(`0x${t}`)}}d.toBigIntBE=e;function a(c,t){{const n=c.toString(16),i=f.from(n.padStart(t*2,"0").slice(0,t*2),"hex");return i.reverse(),i}}d.toBufferLE=a;function s(c,t){{const n=c.toString(16);return f.from(n.padStart(t*2,"0").slice(0,t*2),"hex")}}return d.toBufferBE=s,d}var y=E();const L=r=>e=>{const a=l.blob(r,e),{encode:s,decode:c}=A(a),t=a;return t.decode=(n,i)=>{const o=c(n,i);return y.toBigIntLE(f.from(o))},t.encode=(n,i,o)=>{const p=y.toBufferLE(n,r);return s(p,i,o)},t},z=L(8),x=r=>{const e=l.u8(r),{encode:a,decode:s}=A(e),c=e;return c.decode=(t,n)=>!!s(t,n),c.encode=(t,n,i)=>{const o=Number(t);return a(o,n,i)},c},h=r=>{const e=l.blob(32,r),{encode:a,decode:s}=A(e),c=e;return c.decode=(t,n)=>{const i=s(t,n);return new u(i)},c.encode=(t,n,i)=>{const o=t.toBuffer();return a(o,n,i)},c};class C extends Error{constructor(e){super(e)}}class D extends C{constructor(){super(...arguments),this.name="TokenOwnerOffCurveError"}}const O=l.struct([l.u32("mintAuthorityOption"),h("mintAuthority"),z("supply"),l.u8("decimals"),x("isInitialized"),l.u32("freezeAuthorityOption"),h("freezeAuthority")]);O.span;async function _(r,e,a=!1,s=b,c=B){if(!a&&!u.isOnCurve(e.toBuffer()))throw new D;const[t]=await u.findProgramAddress([e.toBuffer(),s.toBuffer(),r.toBuffer()],c);return t}function q(r,e,a,s,c=b,t=B){return T(r,e,a,s,f.alloc(0),c,t)}function T(r,e,a,s,c,t=b,n=B){const i=[{pubkey:r,isSigner:!0,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!1,isWritable:!1},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:v.programId,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!1,isWritable:!1}];return new w({keys:i,programId:n,data:c})}const g=P;console.log("Valid program ID:",g.toBase58());async function W(r){const e=m(r);if(!e)return[];const a=e.account.config.size;console.log(a);const s=e.provider.connection;if(!s)return console.error("No connection available in the program provider."),[];const c=await s.getProgramAccounts(g,{filters:[{dataSize:a}]}),t=[];for(const{pubkey:n,account:i}of c)try{const o=e.coder.accounts.decode("config",i.data);console.log("Decoded config:",o),t.push({publicKey:n.toBase58(),tokenMint:o.tokenMint.toBase58(),totalLiq:o.totalLiq.toString(),totalCollected:o.totalCollected.toString(),vault:o.vault.toBase58(),authority:o.authority.toBase58(),bump:o.bump})}catch(o){console.warn("Skipping invalid Config account:",n.toBase58()),console.error("Error decoding account:",o)}return t}async function R(r){const e=m(r);if(!e)return[];const a=e.account.userData.size,s=e.provider.connection;if(!s)return console.error("No connection available in the program provider."),[];const c=await s.getProgramAccounts(g,{filters:[{dataSize:a}]}),t=[];for(const{pubkey:n,account:i}of c){console.log("data account:",i.data),console.log("Processing account:",n.toBase58()),console.log(e.idl.accounts.map(o=>o.name));try{const o=e.coder.accounts.decode("userData",i.data);console.log("Decoded user:",o),t.push({publicKey:n.toBase58(),user:o.user.toBase58(),borrowedAmount:o.borrowedAmount.toString(),primaryToken:o.primaryToken.toBase58(),hf:o.hf.toString(),tokenBalance:o.tokenBalance.toString(),bump:o.bump})}catch(o){console.warn("Skipping invalid user account:",n.toBase58()),console.error("Error decoding account:",o)}}return t}async function G(r){const e=m(r);if(!e)return[];const a=e.account.lpData.size,s=e.provider.connection;if(!s)return console.error("No connection available in the program provider."),[];const c=await s.getProgramAccounts(g,{filters:[{dataSize:a}]}),t=[];for(const{pubkey:n,account:i}of c){console.log("data account:",i.data),console.log("Processing account:",n.toBase58()),console.log(e.idl.accounts.map(o=>o.name));try{const o=e.coder.accounts.decode("lpData",i.data);console.log("Decoded user:",o),t.push({publicKey:n.toBase58(),user:o.user.toBase58(),tokenAmt:o.tokenAmt.toString(),token:o.token.toBase58(),bump:o.bump})}catch(o){console.warn("Skipping invalid user account:",n.toBase58()),console.error("Error decoding account:",o)}}return t}async function V(r){const e=m(r);if(!e)return[];const a=e.provider.connection,s=e.account.deposit.size;console.log(s);const c=await a.getProgramAccounts(g,{filters:[{dataSize:s}]});console.log(c);const t=[];for(const{pubkey:n,account:i}of c)try{const o=e.coder.accounts.decode("deposit",i.data),[p]=u.findProgramAddressSync([f.from("config"),o.tokenMint.toBuffer()],e.programId);console.log({actual:o.configAccount.toBase58(),expected:p.toBase58()}),t.push({publicKey:n.toBase58(),user:o.user.toBase58(),tokenMint:o.tokenMint.toBase58(),tokenAmt:o.tokenAmt.toString(),configAccount:o.configAccount.toBase58(),bump:o.bump})}catch(o){console.warn("Skipping invalid deposit account:",n.toBase58()),console.error(o)}return t}async function H(r){const e=m(r);if(!e)return[];const a=e.provider.connection,s=e.account.lqDeposit.size;console.log(s);const c=await a.getProgramAccounts(g,{filters:[{dataSize:s}]});console.log(c);const t=[];for(const{pubkey:n,account:i}of c)try{const o=e.coder.accounts.decode("lqDeposit",i.data),[p]=u.findProgramAddressSync([f.from("config"),o.tokenMint.toBuffer()],e.programId);console.log({actual:o.configAccount.toBase58(),expected:p.toBase58()}),t.push({publicKey:n.toBase58(),user:o.user.toBase58(),tokenMint:o.tokenMint.toBase58(),tokenAmt:o.tokenAmt.toString(),configAccount:o.configAccount.toBase58(),bump:o.bump})}catch(o){console.warn("Skipping invalid deposit account:",n.toBase58()),console.error(o)}return t}export{B as A,K as C,b as T,V as a,R as b,q as c,H as d,G as e,W as f,_ as g};
